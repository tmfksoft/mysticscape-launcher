{"version":3,"sources":["img/Logo.png","components/NewsArticle.tsx","pages/Home.tsx","components/NavBar.tsx","components/Controls.tsx","pages/Attributions.tsx","pages/Settings.tsx","components/TitleBar.tsx","pages/ConsolePage.tsx","pages/CustomPage.tsx","App.tsx","badEnv.tsx","index.tsx"],"names":["module","exports","NewsArticle","props","openBrowser","useContext","launcherContext","className","src","article","featuredImage","title","dangerouslySetInnerHTML","__html","content","onClick","url","Home","launcherState","visiblePage","changePage","saveSettings","newsArticle","NavBar","Logo","ClassNames","active","launcherSettings","showConsole","customPages","map","page","key","name","Controls","launchGame","launcherVersion","statusText","disabled","gameRunning","Attributions","href","Settings","useState","settingsAltered","setSettingsAltered","localSettings","setLocalSettings","useEffect","console","log","type","id","defaultChecked","hideOnLaunch","onChange","e","target","checked","htmlFor","connectLocally","launcherMusic","Classnames","JSON","stringify","TitleBar","closeLauncher","ConsolePage","consoleLog","setConsoleLog","line","CustomPage","MysticAPI","window","mystic","React","createContext","settings","Konami","App","setLauncherState","setVisiblePage","konamiSetup","Audio","mlgMusic","doShake","uiState","setUiState","loop","state","getState","on","newState","paused","pause","play","setTimeout","launcherVisible","playGame","updateSettings","Provider","value","openURL","launchReady","classNames","shake","toLowerCase","substr","customPage","p","style","textAlign","fetchPage","BadEnv","backgroundColor","width","height","position","left","top","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21bd9ff4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.eace5094.png\";","import React, { useContext } from 'react';\r\nimport { INewsArticle } from '../preload';\r\n\r\nimport { launcherContext } from '../App';\r\n\r\nimport './NewsArticle.scss';\r\n\r\nfunction NewsArticle(props: { article: INewsArticle }) {\r\n    const { openBrowser } = useContext(launcherContext);\r\n\r\n    return (\r\n        <div className=\"article\">\r\n            <div className=\"articleImage\">\r\n                <div className=\"imageShadow\"></div>\r\n                <img src={props.article.featuredImage as string}/>\r\n            </div>\r\n            <div className=\"articleContent\">\r\n                <div className=\"title\">{props.article.title}</div>\r\n                <div className=\"content\" dangerouslySetInnerHTML={{ __html: props.article.content as string }}></div>\r\n                <div className=\"articleButtons\">\r\n                    <div className=\"push\"></div>\r\n                    <div className=\"readMore\" onClick={()=>{ openBrowser(props.article.url as string) }}>Read Post</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewsArticle;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { launcherContext } from '../App';\r\nimport LauncherSettings from '../LauncherSettings';\r\nimport NewsArticle from '../components/NewsArticle';\r\n\r\nimport './Home.scss';\r\n\r\nfunction Home() {\r\n    const {\r\n        visiblePage,\r\n        changePage,\r\n        launcherState,\r\n        saveSettings,\r\n    } = useContext(launcherContext);\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            {launcherState.newsArticle && <NewsArticle article={launcherState.newsArticle} ></NewsArticle>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useContext, useState, useEffect } from 'react';\r\nimport ClassNames from 'classnames';\r\nimport { launcherContext } from '../App';\r\n\r\nimport './NavBar.scss';\r\nimport Logo from '../img/Logo.png';\r\n\r\nfunction NavBar() {\r\n    const { changePage, visiblePage, launcherState } = useContext(launcherContext);\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"logo\"><img src={Logo}/></div>\r\n            <div className=\"push\"></div>\r\n            <div className=\"pages\">\r\n                <div className={ClassNames({ active: (visiblePage===\"home\") })} onClick={()=>{ changePage(\"home\"); }}>Home</div>\r\n                {launcherState.launcherSettings.showConsole && <div className={ClassNames({ active: (visiblePage===\"console\") })} onClick={()=>{ changePage(\"console\"); }}>Console</div>}\r\n                {launcherState.customPages.map( (page, key) => {\r\n                    return (<div key={key} className={ClassNames({ active: (visiblePage===`custom-${page.name}`) })} onClick={()=>{ changePage(`custom-${page.name}`); }}>{page.name}</div>);\r\n                })}\r\n                <div className={ClassNames({ active: (visiblePage===\"settings\") })} onClick={()=>{ changePage(\"settings\"); }}>Settings</div>\r\n                <div className={ClassNames({ active: (visiblePage===\"attributions\") })} onClick={()=>{ changePage(\"attributions\"); }}>About</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { useContext } from 'react';\r\nimport { launcherContext } from '../App';\r\nimport ClassNames from 'classnames';\r\n\r\nimport './Controls.scss';\r\n\r\nfunction Controls() {\r\n    const { launchGame, launcherState } = useContext(launcherContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"version\">v{launcherState.launcherVersion}</div>\r\n            <div className=\"controls\">\r\n                <div className=\"statusText\">{launcherState.statusText}</div>\r\n                <div className={ClassNames(\"playButton\",  { disabled: launcherState.gameRunning })} title={(launcherState.gameRunning === true ? \"Game is already running.\" : \"Launch Game\")} onClick={()=>{ launchGame(); }}>\r\n                    Play\r\n                </div>\r\n                <div className=\"push\"></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Controls;","import React from 'react';\r\n\r\nimport './Attributions.scss';\r\n\r\nfunction Attributions() {\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"pageTitle\">\r\n                About\r\n                <div className=\"pageInfo\">Versions, Attributions and more.</div>\r\n            </div>\r\n\r\n            <h4>Parchment Background</h4>\r\n            <a href=\"https://www.freepik.com/free-photos-vectors/background\">Background photo created by aopsan - www.freepik.com</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Attributions;","import React, { useContext, useEffect, useState, ChangeEvent } from 'react';\r\nimport { launcherContext } from '../App';\r\nimport LauncherSettings from '../LauncherSettings';\r\nimport Classnames from 'classnames';\r\n\r\nimport './Settings.scss';\r\n\r\nfunction Settings() {\r\n    const {\r\n        visiblePage,\r\n        changePage,\r\n        launcherState,\r\n        saveSettings,\r\n    } = useContext(launcherContext);\r\n\r\n    const [ settingsAltered, setSettingsAltered ] = useState(false);\r\n\r\n    const [ localSettings, setLocalSettings ] = useState({ ...launcherState.launcherSettings } as LauncherSettings);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Local Settings have been altered\");\r\n        \r\n    }, [ localSettings ]);\r\n\r\n    const toggleHideOnLaunch = (e: ChangeEvent<HTMLInputElement>)=>{\r\n        setLocalSettings({ ...localSettings, hideOnLaunch: e.target.checked});\r\n        setSettingsAltered(true);\r\n    }\r\n\r\n    const toggleShowConsole = (e: ChangeEvent<HTMLInputElement>)=>{\r\n        setLocalSettings({ ...localSettings, showConsole: e.target.checked});\r\n        setSettingsAltered(true);\r\n    }\r\n    const toggleLauncherMusic = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalSettings({ ...localSettings, launcherMusic: e.target.checked});\r\n        setSettingsAltered(true);\r\n    }\r\n\r\n    const toggleLocalConnect = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalSettings({ ...localSettings, connectLocally: e.target.checked});\r\n        setSettingsAltered(true);\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        if (!settingsAltered) return;\r\n        saveSettings({ ...localSettings });\r\n        setSettingsAltered(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"page settings\">\r\n            <div className=\"settingsTitle\">\r\n                Launcher Settings\r\n                <div className=\"settingsInfo\">These settings alter the way the launcher behaves</div>\r\n            </div>\r\n            <div className=\"panes\">\r\n                <div className=\"pane\">\r\n                    <div className=\"paneTitle\">Launcher Settings</div>\r\n                    <div className=\"input\">\r\n                        <input type=\"checkbox\" id=\"hideOnLaunch\" defaultChecked={localSettings.hideOnLaunch} onChange={toggleHideOnLaunch}></input> <label htmlFor=\"hideOnLaunch\">Hide Launcher when Game Starts</label>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <input type=\"checkbox\" id=\"showConsole\" defaultChecked={localSettings.showConsole} onChange={toggleShowConsole}></input> <label htmlFor=\"showConsole\">Enable game console log tab in launcher</label>\r\n                    </div>\r\n                    <div className=\"paneTitle\">Client Settings</div>\r\n                    <div className=\"input\">\r\n                        <input type=\"checkbox\" id=\"connectLocally\" defaultChecked={localSettings.connectLocally} onChange={toggleLocalConnect}></input> <label htmlFor=\"connectLocally\">Connect to a localhost RuneScape Server (debug)</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pane\">\r\n                    <div className=\"paneTitle\">Easter Eggs</div>\r\n                    <div className=\"input\">\r\n                        <input type=\"checkbox\" id=\"launcherMusic\" defaultChecked={localSettings.launcherMusic} onChange={toggleLauncherMusic}></input> <label htmlFor=\"launcherMusic\">Play RuneScape theme in MysticScape launcher</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"settingsControls\">\r\n                <button className={Classnames(\"button\", { disabled: !settingsAltered })} onClick={()=>{ saveChanges(); }}>Save Settings</button>\r\n            </div>\r\n            <pre>\r\n                {JSON.stringify(localSettings)}\r\n            </pre>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, { useContext } from 'react';\r\n\r\nimport './TitleBar.scss';\r\nimport { launcherContext } from '../App';\r\n\r\nfunction TitleBar() {\r\n    const { closeLauncher } = useContext(launcherContext);\r\n\r\n    return (\r\n        <div className=\"titlebar\">\r\n            <div className=\"title\"></div>\r\n            <div className=\"titleControls\">\r\n                <div className=\"exit\" onClick={()=>{ closeLauncher(); }} >x</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TitleBar;","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport './ConsolePage.scss';\r\nimport { launcherContext } from '../App';\r\n\r\nfunction ConsolePage() {\r\n    const { launcherState } = useContext(launcherContext);\r\n    const [ consoleLog, setConsoleLog ] = useState([] as string[]);\r\n\r\n    useEffect(()=>{\r\n        setConsoleLog(launcherState.consoleLog);\r\n    }, [\r\n        launcherState\r\n    ]);\r\n\r\n\r\n    return (\r\n        <div className=\"page console\">\r\n            <div className=\"pageTitle\">\r\n                Game Console Log\r\n                <div className=\"pageInfo\">\r\n                    While the game is running, you'll see its logs here!\r\n                </div>\r\n            </div>\r\n            <div className=\"consoleLog\">\r\n                {consoleLog.map( line => {\r\n                    return <div>{line}</div>;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConsolePage;","import React from 'react';\r\nimport { ICustomPage } from '../preload';\r\n\r\nimport './CustomPage.scss';\r\n\r\nfunction CustomPage(props: ICustomPage) {\r\n    return (\r\n        <div className=\"page custom\">\r\n            <webview src={props.url}></webview>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomPage;","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport Home from './pages/Home';\n\nimport LauncherSettings from './LauncherSettings';\n\nimport Mystic, {LauncherState} from './preload';\nimport NavBar from './components/NavBar';\nimport Controls from './components/Controls';\nimport Attributions from './pages/Attributions';\nimport Settings from './pages/Settings';\nimport TitleBar from './components/TitleBar';\nimport ConsolePage from './pages/ConsolePage';\nimport CustomPage from './pages/CustomPage';\n\nlet MysticAPI:(Mystic|null) = null;\nif ((window as any).mystic) {\n\tMysticAPI = (window as any).mystic as Mystic;\n}\n\nexport const launcherContext = React.createContext({\n\tvisiblePage: \"\",\n\tchangePage: (page: String)=>{},\n\tlauncherState: {} as LauncherState,\n\tsaveSettings: (settings: LauncherSettings) =>{},\n\tlaunchGame: ()=>{},\n\topenBrowser: (url: string) => { /* Do nothing, say nothing! */},\n\tcloseLauncher: ()=>{},\n});\n\nconst Konami = (window as any).Konami;\n\nfunction App() {\n\tconst [ launcherState, setLauncherState ] = useState(null as LauncherState | null);\n\tconst [ visiblePage, setVisiblePage ] = useState(\"home\");\n\tconst [ uiState, setUiState ] = useState({\n\t\tkonamiSetup: false,\n\t\tlauncherMusic: new Audio(\"./music/scape main.mp3\"),\n\t\tmlgMusic: new Audio(\"./music/runescape_trap.mp3\"),\n\t\tdoShake: false,\n\t});\n\tuiState.launcherMusic.loop = true;\n\n\tuseEffect(()=>{\n\t\t// First time run\n\n\t\tif (MysticAPI) {\n\t\t\tlet state = MysticAPI.getState();\n\t\t\tconsole.log(\"Launcher State\", state);\n\t\t\tsetLauncherState(state);\n\n\t\t\tMysticAPI.on('launcher-state', (newState: LauncherState) => {\n\t\t\t\tsetLauncherState(newState);\n\t\t\t});\n\n\n\t\t}\n\t},[]);\n\n\tuseEffect(()=>{\n\t\tif (launcherState === null) return;\n\n\t\tif (!uiState.konamiSetup) {\n\t\t\tconsole.log(\"Setup Konami\");\n\t\t\tsetUiState({ ...uiState, konamiSetup: true });\n\t\t\tnew Konami(() => {\n\t\t\t\tif (launcherState) {\n\t\t\t\t\tif (launcherState.launcherSettings.launcherMusic) {\n\t\t\t\t\t\tconsole.log(\"Switching to MLG Version\");\n\t\t\t\t\t\tif (!uiState.launcherMusic.paused) {\n\t\t\t\t\t\t\tuiState.launcherMusic.pause();\n\t\t\t\t\t\t\tuiState.mlgMusic.play();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsaveSettings({ ...launcherState.launcherSettings, mlgMusic: true });\n\t\t\t\t\tsetUiState({ ...uiState, doShake: true });\n\t\t\t\t\tsetTimeout(()=> {\n\t\t\t\t\t\tsetUiState({ ...uiState, doShake: false });\n\t\t\t\t\t}, 5 * 1000);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (launcherState.launcherSettings.launcherMusic) {\n\t\t\t// If Music is Enabled\n\t\t\tif (launcherState.launcherSettings.mlgMusic) {\n\t\t\t\t// Play MLG Version\n\t\t\t\tuiState.launcherMusic.pause();\n\t\t\t\tuiState.mlgMusic.play();\n\t\t\t} else {\n\t\t\t\t// Play Original\n\t\t\t\tuiState.mlgMusic.pause();\n\t\t\t\tuiState.launcherMusic.play();\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"Pausing Launcher Music\");\n\t\t\tuiState.mlgMusic.pause();\n\t\t\tuiState.launcherMusic.pause();\n\t\t}\n\n\t\tif (!launcherState.launcherVisible) {\n\t\t\t// Launcher hidden\n\t\t\tif (launcherState.launcherSettings.launcherMusic) uiState.launcherMusic.pause();\n\t\t} else {\n\t\t\t// Launcher visible again\n\t\t\tif (launcherState.launcherSettings.launcherMusic) uiState.launcherMusic.play();\n\t\t}\n\n\t}, [ launcherState, uiState ]);\n\n\tuseEffect(()=>{\n\t\tconsole.log(\"Launcher state has changed.\");\n\t}, [ launcherState ]);\n\n\tconst play = ()=>{\n\t\tif (!MysticAPI) return;\n\t\tMysticAPI.playGame();\n\t}\n\tconst closeLauncher = ()=>{\n\t\tif (!MysticAPI) return;\n\t\tMysticAPI.closeLauncher();\n\t}\n\n\tconst changePage = (page: String) => {\n\t\t// Can choose whether to change page or not!\n\n\t\tif (true) {\n\t\t\tsetVisiblePage(page as any);\n\t\t}\n\t}\n\tconst saveSettings = (settings: LauncherSettings) => {\n\t\t// Does nothing right now.\n\t\tif (MysticAPI === null) return;\n\t\tMysticAPI?.updateSettings(settings);\n\t};\n\tconst fetchPage = () => {\n\t\tif (!launcherState) return;\n\n\t\tswitch(visiblePage.toLowerCase()) {\n\t\t\tcase 'home':\n\t\t\t\treturn <Home></Home>;\n\t\t\tcase 'attributions':\n\t\t\t\treturn <Attributions></Attributions>;\n\t\t\tcase 'settings':\n\t\t\t\treturn <Settings></Settings>;\n\t\t\tcase 'console':\n\t\t\t\treturn <ConsolePage></ConsolePage>;\n\t\t\tdefault:\n\t\t\t\tif (visiblePage.substr(0,7) === \"custom-\") {\n\t\t\t\t\tlet customPage = null;\n\t\t\t\t\tfor (let p of launcherState.customPages) {\n\t\t\t\t\t\tif (p.name === visiblePage.substr(7)) {\n\t\t\t\t\t\t\tcustomPage = p;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (customPage) {\n\t\t\t\t\t\treturn <CustomPage {...customPage}></CustomPage>;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"page\" style={{ textAlign:\"center\" }}>\n\t\t\t\t\t\t\t<h1>Not Found</h1>\n\t\t\t\t\t\t\tWhoops, couldn't find that screen!\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t}\n\t}\n\tconst openBrowser = (url: string) => {\n\t\tif (!MysticAPI) return;\n\t\tMysticAPI.openURL(url);\n\t}\n\n\t// When null, return loading!\n\tif (launcherState === null) return <div>Loading</div>;\n\n\treturn (\n\t\t<launcherContext.Provider value={{ visiblePage, changePage, launcherState, saveSettings, launchGame: play, openBrowser, closeLauncher }}>\n\t\t\t<div className=\"debug\">\n\t\t\t\tcurrent page is {visiblePage}\n\t\t\t\t<p>\n\t\t\t\t\ti am mystic scape launcher woo\n\t\t\t\t</p>\n\t\t\t\tThe game {( launcherState.launchReady===true ? \"is ready.\" : \"isn't ready.\")}\n\t\t\t\t\t<br/>\n\t\t\t\tThe game {( launcherState.gameRunning===true ? \"is running\" : \"isn't running\")}\n\t\t\t\t<button onClick={play}>Play</button>\n\t\t\t</div>\n\t\t\t<div className={classNames(\"App\", { shake: uiState.doShake})}>\n\t\t\t\t<TitleBar></TitleBar>\n\t\t\t\t<NavBar></NavBar>\n\t\t\t\t{fetchPage()}\n\t\t\t\t<Controls></Controls>\n\t\t\t</div>\n\t\t</launcherContext.Provider>\n\t);\n}\n\nexport default App;\n","import React  from 'react';\r\n\r\nfunction BadEnv(){\r\n    return (\r\n        <div style={{\r\n            backgroundColor: \"rgb(231,76,60)\",\r\n            width:\"100vw\",\r\n            height: \"100vh\",\r\n            position:\"fixed\",\r\n            left:0,\r\n            top:0,\r\n            color: \"white\",\r\n            textAlign: \"center\",\r\n        }}>\r\n            <h1>Bad Environment</h1>\r\n            This React app is not intended to run under this environment!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BadEnv;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nimport BadEnv from './badEnv';\nimport Mystic from './preload';\n\nlet MysticAPI = null;\nif ((window as any).mystic) {\n\tMysticAPI = (window as any).mystic as Mystic;\n}\n\nconsole.log(MysticAPI);\nif (MysticAPI) {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n\t);\n} else {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<BadEnv />\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n\t);\n}\n"],"sourceRoot":""}